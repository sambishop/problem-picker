#!/usr/bin/python3

import random

class Possibilities:
    def __init__(self, *books):
        self.books = books

    def enum(self):
        return [exercise for book in self.books for exercise in book.enum()]

    def shuffle(self):
        exercises = self.enum()
        random.shuffle(exercises)
        return exercises

class Book:
    def __init__(self, name, *sections):
        self.name = name
        self.sections = sections

    def enum(self):
        return ['{}, {}'.format(self.name, exercise) for section in self.sections for exercise in section.enum()]

class Section:
    def __init__(self, name, page, exercises):
        self.name = name
        self.page = page
        self.exercises = exercises

    def enum(self):
        lst = ['Read Section {}'.format(self.name)]
        lst.extend(['Section {}, Exercise {} (page {})'.format(self.name, exercise, self.page) for exercise in range(1, self.exercises + 1)])
        return lst

class Lesson:
    def __init__(self, name, page, exercises):
        self.name = name
        self.page = page
        self.exercises = exercises

    def enum(self):
        lst = ['Lesson {}, Exercise {} (page {})'.format(self.name, exercise, self.page) for exercise in range(1, self.exercises + 1)]
        return lst

for p in Possibilities(
            Book(
                "Book of Proof",
                Section( 1.1 , page=  7, exercises=52),
                Section( 1.2 , page= 10, exercises=20),
                Section( 1.3 , page= 14, exercises=16),
                Section( 1.4 , page= 16, exercises=20),
                Section( 1.5 , page= 18, exercises=10),
                Section( 1.6 , page= 20, exercises= 6),
                Section( 1.7 , page= 23, exercises=14),
                Section( 1.8 , page= 28, exercises=14),
                Section( 2.1 , page= 37, exercises=15),
                Section( 2.2 , page= 41, exercises=14),
                Section( 2.3 , page= 44, exercises=13),
                Section( 2.4 , page= 46, exercises= 5),
                Section( 2.5 , page= 48, exercises=11),
                Section( 2.6 , page= 51, exercises=14),
                Section( 2.7 , page= 53, exercises=10),
                Section( 2.9 , page= 57, exercises=13),
                Section( 2.10, page= 60, exercises=12),
                Section( 3.1 , page= 68, exercises=12),
                Section( 3.2 , page= 72, exercises=10),
                Section( 3.3 , page= 77, exercises=14),
                Section( 3.4 , page= 80, exercises=14),
                Section( 3.5 , page= 83, exercises=10),
                Section( 4   , page=100, exercises=28),
                Section( 5   , page=110, exercises=31),
                Section( 6   , page=118, exercises=24),
                Section( 7   , page=129, exercises=36),
                Section( 8   , page=145, exercises=31),
                Section( 9   , page=153, exercises=34),
                Section(10   , page=169, exercises=36),
                Section(11.0 , page=178, exercises=15),
                Section(11.1 , page=182, exercises=18),
                Section(11.2 , page=187, exercises=15),
                Section(11.3 , page=190, exercises= 5),
                Section(11.4 , page=194, exercises= 8),
                Section(12.1 , page=200, exercises=12),
                Section(12.2 , page=204, exercises=18),
                Section(12.3 , page=207, exercises= 7),
                Section(12.4 , page=210, exercises=10),
                Section(12.5 , page=214, exercises=10),
                Section(12.6 , page=216, exercises=14),
                Section(13.1 , page=222, exercises=16),
                Section(13.2 , page=228, exercises=15),
                Section(13.3 , page=231, exercises=10),
                Section(13.4 , page=238, exercises= 7),
            ),
#            Book(
#                "How to Prove It",
#                Section(1.1, page= 13, exercises= 7),
#                Section(1.2, page= 24, exercises=18),
#                Section(1.3, page= 33, exercises= 8),
#                Section(1.4, page= 41, exercises=15),
#                Section(1.5, page= 53, exercises=10),
#                Section(2.1, page= 63, exercises= 9),
#                Section(2.2, page= 72, exercises=12),
#                Section(2.3, page= 81, exercises=15),
#                Section(3.1, page= 93, exercises=16),
#                Section(3.2, page=106, exercises=17),
#                Section(3.3, page=121, exercises=26),
#                Section(3.4, page=133, exercises=26),
#                Section(3.5, page=143, exercises=31),
#                Section(3.6, page=153, exercises=12),
#                Section(3.7, page=161, exercises= 9),
#            ),
        ).shuffle():
    print(p)
